{
	"name": "DF_src_to_stg_transaction_incremental",
	"properties": {
		"folder": {
			"name": "src_to_stg"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_CSV_IN1680",
						"type": "DatasetReference"
					},
					"name": "SRCsrcTransaction"
				},
				{
					"dataset": {
						"referenceName": "DS_CSV_IN1680",
						"type": "DatasetReference"
					},
					"name": "SRCtgtTransaction"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_CSV_IN1680",
						"type": "DatasetReference"
					},
					"name": "SNKstgtransaction"
				}
			],
			"transformations": [],
			"scriptLines": [
				"parameters{",
				"     file as string",
				"}",
				"source(output(",
				"          TransactionID as integer,",
				"          AccountID as integer,",
				"          CustomerID as integer,",
				"          TransactionDate as date,",
				"          TransactionTime as string,",
				"          TransactionType as string,",
				"          Amount as double,",
				"          BalanceAfterTransaction as double,",
				"          Currency as string,",
				"          Channel as string,",
				"          MerchantCode as string,",
				"          Location as string,",
				"          Fee as double,",
				"          ExchangeRate as double,",
				"          ApprovalCode as string,",
				"          FraudFlag as boolean,",
				"          Narration as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SRCsrcTransaction",
				"source(output(",
				"          TransactionID as string,",
				"          AccountID as string,",
				"          CustomerID as string,",
				"          TransactionDate as string,",
				"          TransactionTime as string,",
				"          TransactionType as string,",
				"          Amount as string,",
				"          BalanceAfterTransaction as string,",
				"          Currency as string,",
				"          Channel as string,",
				"          MerchantCode as string,",
				"          Location as string,",
				"          Fee as string,",
				"          ExchangeRate as string,",
				"          ApprovalCode as string,",
				"          FraudFlag as string,",
				"          Narration as string,",
				"          created_date as string,",
				"          created_by as string,",
				"          updated_date as string,",
				"          updated_by as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SRCtgtTransaction",
				"SRCsrcTransaction sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SNKstgtransaction"
			]
		}
	}
}