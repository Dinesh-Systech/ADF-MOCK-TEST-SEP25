{
	"name": "DF_Customers_scd2",
	"properties": {
		"folder": {
			"name": "STG_DW"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_CSV_IN1685",
						"type": "DatasetReference"
					},
					"name": "SRCcustomers"
				},
				{
					"dataset": {
						"referenceName": "DS_CSV_IN1685",
						"type": "DatasetReference"
					},
					"name": "TGTcustomers"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_CSV_IN1685",
						"type": "DatasetReference"
					},
					"name": "SNKdimcustomer"
				}
			],
			"transformations": [
				{
					"name": "SELECTsrc"
				},
				{
					"name": "SELECTtgt"
				},
				{
					"name": "LEFTsrctgt"
				},
				{
					"name": "INSERTcolschange"
				},
				{
					"name": "SURROGATEcustomerkey"
				},
				{
					"name": "SELECTcols"
				},
				{
					"name": "split1",
					"description": "scd2 condition"
				},
				{
					"name": "UPDATEcols"
				},
				{
					"name": "UNIONstreams"
				},
				{
					"name": "NullHandling",
					"description": "Null"
				},
				{
					"name": "TRANSFORMATIONS"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Gender as string,",
				"          DateOfBirth as date,",
				"          Email as string,",
				"          Phone as string,",
				"          AddressLine1 as string,",
				"          AddressLine2 as string,",
				"          City as string,",
				"          State as string,",
				"          Country as string,",
				"          PostalCode as integer,",
				"          MaritalStatus as string,",
				"          Occupation as string,",
				"          AnnualIncome as integer,",
				"          RiskCategory as string,",
				"          {25-09-2025 14:16:3417} as timestamp,",
				"          PL_SRC_STG18 as string,",
				"          {25-09-2025 14:16:3419} as timestamp,",
				"          PL_SRC_STG20 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SRCcustomers",
				"source(output(",
				"          CustomerID as integer,",
				"          customer_key as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          FullName as string,",
				"          Gender as string,",
				"          DateOfBirth as string,",
				"          Age as string,",
				"          Email as string,",
				"          Phone as string,",
				"          AddressLine1 as string,",
				"          AddressLine2 as string,",
				"          City as string,",
				"          State as string,",
				"          Country as string,",
				"          PostalCode as string,",
				"          MaritalStatus as string,",
				"          Occupation as string,",
				"          Sector as string,",
				"          AnnualIncome as string,",
				"          RiskCategory as string,",
				"          created_by as string,",
				"          created_date as string,",
				"          updated_date as string,",
				"          updated_by as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TGTcustomers",
				"SRCcustomers select(mapColumn(",
				"          CustomerID,",
				"          FirstName,",
				"          LastName,",
				"          Gender,",
				"          DateOfBirth,",
				"          Email,",
				"          Phone,",
				"          AddressLine1,",
				"          AddressLine2,",
				"          City,",
				"          State,",
				"          Country,",
				"          PostalCode,",
				"          MaritalStatus,",
				"          Occupation,",
				"          AnnualIncome,",
				"          RiskCategory,",
				"          created_date = {25-09-2025 14:16:3417},",
				"          created_by = PL_SRC_STG18,",
				"          updated_date = {25-09-2025 14:16:3419},",
				"          updated_by = PL_SRC_STG20",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECTsrc",
				"TGTcustomers select(mapColumn(",
				"          T_CustomerID = CustomerID,",
				"          T_State = State,",
				"          T_updated_date = updated_date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECTtgt",
				"SELECTsrc, SELECTtgt join(CustomerID == T_CustomerID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LEFTsrctgt",
				"split1@INSERTstream derive(created_date = currentTimestamp(),",
				"          updated_date = currentTimestamp()) ~> INSERTcolschange",
				"TRANSFORMATIONS keyGenerate(output(customer_key as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> SURROGATEcustomerkey",
				"SURROGATEcustomerkey select(mapColumn(",
				"          CustomerID,",
				"          FirstName,",
				"          LastName,",
				"          Gender,",
				"          DateOfBirth,",
				"          Email,",
				"          Phone,",
				"          AddressLine1,",
				"          AddressLine2,",
				"          City,",
				"          State,",
				"          Country,",
				"          PostalCode,",
				"          MaritalStatus,",
				"          Occupation,",
				"          AnnualIncome,",
				"          RiskCategory,",
				"          created_date,",
				"          created_by,",
				"          updated_date,",
				"          updated_by,",
				"          Sector,",
				"          customer_key",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECTcols",
				"LEFTsrctgt split((isNull(T_CustomerID)) || (State != T_State),",
				"     (State != T_State),",
				"     disjoint: true) ~> split1@(INSERTstream, UPDATEstream)",
				"split1@UPDATEstream derive(updated_date = currentTimestamp()) ~> UPDATEcols",
				"INSERTcolschange, UPDATEcols union(byName: true)~> UNIONstreams",
				"UNIONstreams derive(each(match(type=='string'), $$ = iifNull($$, 'UNK')),",
				"          each(match(type=='integer'), $$ = iifNull($#, 0)),",
				"          each(match(type=='timestamp'), $$ = iifNull($$, toTimestamp('1900-01-01 00:00:00', 'dd-MM-yyyy')))) ~> NullHandling",
				"NullHandling derive(Sector = iif(Occupation=='Teacher', 'Education', iif(Occupation=='Business analyst', 'IT', iif(Occupation=='Manager', 'IT', iif(Occupation=='Engineer', 'Engineering', iif(Occupation=='Doctor', 'Medicine', iif(Occupation=='Banker', 'Finance', iif(Occupation=='Lawyer', 'Law', \"invalid\")))))))) ~> TRANSFORMATIONS",
				"SELECTcols sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['mod_dim_customers_IN1685.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SNKdimcustomer"
			]
		}
	}
}